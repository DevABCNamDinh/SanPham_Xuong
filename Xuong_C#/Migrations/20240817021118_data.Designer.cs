// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Xuong_C_.Context;

#nullable disable

namespace Xuong_C_.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240817021118_data")]
    partial class data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Xuong_C_.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("229cfa76-9898-4bcd-9fbf-f1252e16bfd0"),
                            Author = "Manh",
                            Description = "MM",
                            ImagePath = "./images/1984.jpg",
                            Price = 47m,
                            PublishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 10,
                            Title = "woaa"
                        },
                        new
                        {
                            Id = new Guid("64332179-411c-4754-b9be-a52744f2c007"),
                            Author = "Manh",
                            Description = "MM",
                            ImagePath = "./images/catcher_in_the_rye.jpg",
                            Price = 40m,
                            PublishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 10,
                            Title = "woaa"
                        },
                        new
                        {
                            Id = new Guid("ce50c8ea-cbec-4254-9a54-7b25adcf8f2e"),
                            Author = "Manh",
                            Description = "MM",
                            ImagePath = "./images/great_gatsby.jpeg",
                            Price = 49m,
                            PublishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 10,
                            Title = "woaa"
                        },
                        new
                        {
                            Id = new Guid("af231b46-3dc5-4c03-bc62-2dd24eae51e6"),
                            Author = "Manh",
                            Description = "MM",
                            ImagePath = "./images/moby_dick.jpg",
                            Price = 43m,
                            PublishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 10,
                            Title = "woaa"
                        },
                        new
                        {
                            Id = new Guid("ef057429-5aba-48e2-8ed9-58d15cca0ecc"),
                            Author = "Manh",
                            Description = "MM",
                            ImagePath = "./images/to_kill_a_mockingbird.jpg",
                            Price = 45m,
                            PublishedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 10,
                            Title = "woaa"
                        });
                });

            modelBuilder.Entity("Xuong_C_.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Xuong_C_.Models.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Xuong_C_.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Xuong_C_.Models.Cart", b =>
                {
                    b.HasOne("Xuong_C_.Models.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("Xuong_C_.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Xuong_C_.Models.CartItem", b =>
                {
                    b.HasOne("Xuong_C_.Models.Book", "Book")
                        .WithMany("CartItems")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Xuong_C_.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Xuong_C_.Models.Book", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("Xuong_C_.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("Xuong_C_.Models.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
